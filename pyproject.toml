[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "python_pdb"
version = "0.1.3"
authors = [
    { name="Benjamin McMaster", email="benjamin.mcmaster@rdm.ox.ac.uk"}
]
readme = "README.md"
description = "Tools for working with Protein Data Bank Files"
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "pandas",
]

[project.optional-dependencies]
develop = [
    "myst-parser",
    "nbsphinx",
    "pytest",
    "prysk[pytest-plugin]",
    "python-semantic-release",
    "ruff",
    "sphinx",
    "sphinx-rtd-theme",
]

[tool.ruff]
line-length = 120
exclude = ["third_party"]

[tool.ruff.lint]
select = ["ALL"]
extend-select = ["E501"]
ignore = ["COM812",     # Allow missing trailing comma: not recommended to be used with the formatter
          "D107",       # do not require __init__ methods to have a docstring
          "D203",       # one-blank-line-before-class: ignoring because it clashes with D211
          "D213",       # multi-line-summary-second-line: ignoring because it clashes with D212
          "FIX",        # allow TODOs, FIXMEs, etc
          "ISC001",     # Allow single line str concatenation: not recommended to be used with the formatter
          "PERF203",    # Allow try-except blocks in loops
          "PLR0913",    # no maximum number of arguments for a function
          "PT009",      # allow unit test style asserts
          "PTH",        # ignore recommendations for pathlib
          "RET504",     # Allow extra assignment to variable to improve readability
          "TD",         # allow TODOs, FIXMEs, etc
          "UP015"]      # allow explicit file modes

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "single"

[tool.ruff.lint.per-file-ignores]
"**/apps/*" = ["ANN",       # ignore type annotations in apps
               "C901",      # ignore complex warnings in apps
               "D101",      # ignore class docs in apps
               "D102",      # ignore methods docs in apps
               "D103",      # ignore function docs in apps
               "D104",      # ignore package docs in apps
               "D107",      # ignore constructor docs in apps
               "PLR0912",   # ignore too many branches in apps
               "PLR0915",   # ignore too many statements in apps
               "T201"]      # Allow prints in apps
"docs/*" = ["INP001",   # Do not require __init__.py for docs
            "D100",     # Do not require docstring for docs
            "A001"]     # Allow copyright for sphix docs
"examples/*" = ["D101",    # ignore class docs in notebooks
                "D102",    # ignore methods docs in notebooks
                "D103",    # ignore function docs in notebooks
                "D107",    # ignore constructor docs in notebooks
                "T201"]    # Allow print statements in notebooks
"tests/*" = ["ANN",       # ignore type annotations in tests
             "D100",      # ignore module docs in tests
             "D101",      # ignore class docs in tests
             "D102",      # ignore methods docs in tests
             "D103",      # ignore function docs in tests
             "D104",      # ignore package docs in tests
             "D107",      # ignore constructor docs in tests
             "SLF001"]    # Allow private methods in tests

[tool.ruff.format]
quote-style = "preserve"
docstring-code-format = true

[tool.semantic_release]
version_variables = [
    "src/python_pdb/__init__.py:__version__",
    "pyproject.toml:version"
]
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
major_on_zero = true
tag_format = "v{version}"
build_command = "pip install build && python3 -m build"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GH_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
